[{"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\index.tsx":"1","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\reportWebVitals.ts":"2","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\App.tsx":"3","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\i18n.tsx":"4","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\pages\\Header.tsx":"5","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\pages\\HomePage.tsx":"6","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\pages\\Navbar.tsx":"7","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\layout\\Spinner.tsx":"8","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\nufR\\pages\\ListPage.tsx":"9","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\nufrConfig\\exerciseConfig.tsx":"10","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\nufR\\pages\\NufUtils.tsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":950,"mtime":1611732101384,"results":"15","hashOfConfig":"13"},{"size":1343,"mtime":1611322311199,"results":"16","hashOfConfig":"13"},{"size":96,"mtime":1611307748638,"results":"17","hashOfConfig":"13"},{"size":71,"mtime":1611242853217,"results":"18","hashOfConfig":"13"},{"size":1696,"mtime":1611734734983,"results":"19","hashOfConfig":"13"},{"size":484,"mtime":1611652115876,"results":"20","hashOfConfig":"13"},{"size":2011,"mtime":1611734010396,"results":"21","hashOfConfig":"13"},{"size":1122,"mtime":1611672470393,"results":"22","hashOfConfig":"13"},{"size":1141,"mtime":1611667583620,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kk5cle",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\index.tsx",[],["50","51"],"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\reportWebVitals.ts",[],"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\App.tsx",["52"],"import React, { Fragment } from \"react\";\n\nimport \"./styles/App.css\";\nimport \"./styles/GridStyles.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Header from \"./pages/Header\";\nimport ListPage from \"./nufR/pages/ListPage\"\nimport HomePage from \"./pages/HomePage\";\nimport {I18nextProvider} from \"react-i18next\";\nimport i18n from \"./i18n\"\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <I18nextProvider i18n={i18n}>\n        <Router>\n          <Fragment>\n            <section>\n              <Header />\n              <Switch>\n                <Route path='/exercises'>\n                  <ListPage configname=\"exercise\" />\n                </Route>\n                <Route path='/'>\n                  <HomePage />\n                </Route>\n              </Switch>\n            </section>\n          </Fragment>\n        </Router>\n      </I18nextProvider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\i18n.tsx",[],"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\pages\\Header.tsx",[],"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\pages\\HomePage.tsx",[],"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\pages\\Navbar.tsx",["53","54"],"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\layout\\Spinner.tsx",["55"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\ninterface ISpinnerArgs {\r\n  message:string,\r\n  altText?:string\r\n}\r\n\r\nexport default function Spinner(  {message , altText } :ISpinnerArgs) {\r\n\r\n  return (<div style={{ width: '200px', margin: 'auto', display: 'block' }}>\r\n           {message}\r\n          <img src={spinner} style={{ width: '200px', margin: 'auto', display: 'block' }} alt={ altText ? altText : \"Loading...\" } />\r\n        </div>);\r\n\r\n}\r\n","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\nufR\\pages\\ListPage.tsx",["56"],"import {Toolbar} from 'react-data-grid-addons';\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport Spinner from '../../layout/Spinner';\r\n\r\n\r\nconst axios = require('axios').default;\r\n\r\nexport interface IListPageProps {\r\n    configname:string\r\n}\r\n\r\nexport interface IConfig  {\r\n    name:string,\r\n    getListDataUrl:string,\r\n    pageTitle:string,\r\n    spinnerMessage?:string\r\n    columns:[any,any,any,any,any,any,any]\r\n}\r\n\r\nexport interface IListPageProps  {\r\n    configname:string\r\n}\r\n\r\nexport const ListPage = (props:IListPageProps) => {\r\n\r\n    const [data, setData] = useState( [] );\r\n    const [config, setConfig] = useState<IConfig | null>(null);\r\n\r\n    useEffect(() => {\r\n \r\n        const fetchData = async (url:string) => {\r\n          const result = await axios( url );\r\n          setData(result.data.results);\r\n        };\r\n\r\n        import(\"../../nufrConfig/\" + props.configname + \"Config\").then(c => {\r\n            \r\n            setConfig(c.default);\r\n            if(config!=null) {\r\n                console.log(\"config\" + config);\r\n                fetchData(config.getListDataUrl);\r\n            }\r\n        });\r\n\r\n        return ;\r\n        // eslint-disable-next-line\r\n    }, [config]);\r\n    \r\n    if (config==null) {\r\n        return <Spinner message={\"Loading ...\"} ></Spinner>;\r\n    } else {    \r\n        return (\r\n            <Fragment>\r\n                <div id={config.name+\"pageTitle\"} className=\"h1\">{config.pageTitle}</div>\r\n                <div id={ config.name+\"datagrid\"} className=\"grid-wrapper\">\r\n                    { data.length > 0  ? \r\n                        <ReactDataGrid columns={config.columns} rows={data} className=\"fill-grid\" style={{ resize: 'both' }} /> \r\n                        :\r\n                        <Spinner message={config.spinnerMessage || \"Loading ...\"} ></Spinner> \r\n                    }\r\n                </div>\r\n            </Fragment>\r\n\r\n            ); \r\n    }\r\n            \r\n}\r\n\r\nexport default ListPage;","C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\nufrConfig\\exerciseConfig.tsx",[],"C:\\Users\\christoforosl\\java\\projects\\mygym-web\\mygym-admin-web\\src\\nufR\\pages\\NufUtils.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":5,"column":50,"nodeType":"63","messageId":"64","endLine":5,"endColumn":54},{"ruleId":"61","severity":1,"message":"65","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":37},{"ruleId":"61","severity":1,"message":"66","line":1,"column":39,"nodeType":"63","messageId":"64","endLine":1,"endColumn":48},{"ruleId":"61","severity":1,"message":"67","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"68","line":1,"column":9,"nodeType":"63","messageId":"64","endLine":1,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useEffect' is defined but never used.","'Fragment' is defined but never used.","'Toolbar' is defined but never used.","no-global-assign","no-unsafe-negation"]